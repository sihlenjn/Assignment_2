[
  {
    "objectID": "assignment2.html",
    "href": "assignment2.html",
    "title": "Data Science for Industry Assignment 2",
    "section": "",
    "text": "Abstract In this paper, we explore the integration of Latent Dirichlet Allocation (LDA) , a powerful topic modeling technique, and sentiment analysis to uncover deeper insights from textual data. Textual data analysis has gained significant importance in various domains, such as social media, customer reviews, and Large Language Model. While LDA is widely used for topic extraction, and sentiment analysis is employed to determine the emotional tone of texts, combining these two techniques can yield a more comprehensive understanding of text data. The objective of this paper was to conduct descriptive analysis using these methods. Our descriptive analysis of the presidents’ SONA speeches using LDA topic modeling and sentiment analysis find some minor differences in the tone of the words and sentence used by the presidents. However, LDA managed to pick up that speeches occurring the during the Covid-19 years were about Covid-19."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome!",
    "section": "",
    "text": "This is a website for Assignment of DS4I. The following files can be found under each tab."
  },
  {
    "objectID": "LLM.html",
    "href": "LLM.html",
    "title": "Report on use of Large Language Models (LLM)",
    "section": "",
    "text": "In this part of the paper, we provide a description of what Large Language Models (LLM) were used for and provide a critical reflection on the performance of the LLM for assisting with data science related work such as this project. The two LLM used in this paper are quillbot and ChatGPT each being completely different purposes.\n\nQuillbot- a paraphraser tool\nQuillbot is a paraphraser AI tool used to paraphrase a sentence or paragraph and make it formula. All the writing parts of this assignment, this AI tool was used to help with grammar. I type the sentence of my own then copy the sentence to this AI tool. In most cases, if not all , it always just replaces some words with synonyms. The sentence at times loses it meaning so I make sure that meaning is still what I wanted say. This tool doesn’t do well with statistical terms especially if I wanted to rewrite interpretations to a mode. The output it generate at times does not make any sense.\nGiven that I was using the free version of this tool, it’s difficult to provide a complete assessment of its performance. The benefits of using this tool, is that it helps those people who struggle with writing and maybe English is not their home language But with that being said, one stills need to be able filter out sentences that do not match exactly what you wanted to say.\n\n\nChatGPT\nThis an artificial intelligence (AI) chabot that uses natural language processing to mimic human-like conversational dialogue. It was mainly used for coding in this project.\nWhat I have noticed about chatgpt is that if I ask code related questions without specifying the coding language, it automatically returns a possible solution with a Python code. In order for it change , one has specifically tell it that the code is in R or whatever language.\nIn this assignment, I was getting an error when using ggplot to plot the sentiment over time. The error was that there was only one group in the data i.e . it was only either negative or positives. Below is a snippet of the code.\nggplot(aes(x = year, y = freq, colour = sentiment,group=sentiment))\nThe only thing that was missing was the group = sentiment argument. I got by copy and paste the error from R to chatgpt as it gave an answer that was not useful.\nChatGPT is very efficient with code questions, and the good thing about code , you can always test it and see if you get what you want. It becomes a challenge if one has no idea of what the code is suppose to output. One part where chatgpt struggles is written questions that are not asking about coding. Once you prompt it to further explain the answer, this is where things get tricky. The answers it produces are completely wrong and don’t make any sense at times."
  },
  {
    "objectID": "assignment2.html#data-pre-processing",
    "href": "assignment2.html#data-pre-processing",
    "title": "Data Science for Industry Assignment 2",
    "section": "Data pre-processing",
    "text": "Data pre-processing\nThe data set used for this paper is sourced from https://www.gov.za/state-nation-address, the full speeches of State of the Nation Address from current and former presidents. The speeches included are from 1994 to 2023. All the analysis in this paper is conducted in R R Core Team (2023).\n\n\n\nThe full speeches are read from Ian Durbach’s Github repository. The resulting data frame has two columns filename and speech. New columns, president, year and date are added to indicate from which president the speeches are from and also the dates the speeches took place. The dates are generated from the first part of each speech since they all begin with a date. hese dates are then removed from all the speeches and any unnecessary text which will not be useful in our analysis. Such text include is removed includes website links , encoding for new lines \\n , backlashes . The generated are converted to same format given by \\text{dd-mm-yyyy}. A new column, named pres_num , a factor variable used to denote each president with classes from 1 to 6."
  },
  {
    "objectID": "assignment2.html#sentiment-analysis",
    "href": "assignment2.html#sentiment-analysis",
    "title": "Data Science for Industry Assignment 2",
    "section": "Sentiment Analysis",
    "text": "Sentiment Analysis\nSentiment analysis is the analysis of emotions, opinions and feelings of people expressed in written text. These can be in the form of speeches of presidents, tweets , events etc. Through sentiment analysis, one is able to gain deeper insights into body of text. In this section, we explore sentiment analysis conducted on the data set of the South African presidents’ speeches from 1994 to 2023 and we also look at how these change over time.\nWe will be using the bing sentiment lexicons which comes with the tidytext package. This is a list of words labelled as positive or negative. We will analyse the sentiment of the words used by the presidents in their speeches and assess if these are positive or negative. It is for this reason that the token used to tokenize the data set is words. For cases where a word does not exist in the bing lexicon, these words will be labelled as neutral. The individual president’s speeches will be analyzed. To analyse trends of the sentiments over time, the time period that will be considered is years. This will be done the entire data set and then consider individual presidents. The presidents that will be considered are Jacob Zuma and Thabo Mbeki.\nThe second part of this section, we look to assess the sentiment of longer sequences , sentences will considered. To conduct this analysis, we first tokenize the data set into sentences and then add an index column to the tokenized data for each sentence. The data is further tokenized into words for which their sentiments will be analysed. To analyse the sentiment of a sentence. This is done by analysing the sentiment of the individual words in the sentences and add up the sentiments over words. The net sentiment of the sentence will be given by the difference between the sum of positive sentiments and negative sentiments of the words in the sentence. Therefore, this implies that a negative net sentiment refers to a sentence that has a negative sentiment and vice versa. Similarly to part one of this section, we also look at the trends of the sentiment of the sentences over the years."
  },
  {
    "objectID": "assignment2.html#topic-modelling",
    "href": "assignment2.html#topic-modelling",
    "title": "Data Science for Industry Assignment 2",
    "section": "Topic modelling",
    "text": "Topic modelling\nTopic modelling is a natural language processing (NLP) technique used to summarize a document by describing it in terms of small number of topics. It is useful for task such as document clustering, content recommendation. In this paper, we will implement latent Dirichlet allocation (LDA), which is a popular method for doing topic modelling. Other methods such Latent Semantic analysis (LSA) , Probabilistic Latent Semantic analysis (pSLA) exists, the focus of this paper will be the LDA model for doing topic modelling. In LDA, each document is a mixture of topics and each topic is a mixture of words. To implement LDA, the following steps will be followed:\n\nAdd an extra column for speech id before the data is tokenized.\nTokenization: Tokenize the speech data set into individuals words and remove stop words.\nDocument-term matrix: Create a long tidy format document-term matrix where we count frequency of the words in each speech. i.e. the number of times each word is used in each speech. The document-term will not be created from stretch. The reason for this, the topicmodels package used to implement LDA requires the document-term matrix to be provided as a DocumentTermMatrix object. The document in our case are the individual speeches from each president.\nLDA modelling: We fit the LDA model by first specifying the number of variables we wish to use\nTopic and document inference: Infer on the topics for each document. This is to find topics contained in the documents, the gamma parameter will be used for this. It give the topic mixtures for each document. We also examine the most common words associated with each topic to interpret their meaning and compare different topics in terms of their difference.\n\nThe number of topics must be specified before training model. Given that all the speeches are about the State of the Nation Address , it’s unlikely that the model will find different topics. Hence, the value of k used will be 3."
  },
  {
    "objectID": "assignment2.html#sentiment-analysis-1",
    "href": "assignment2.html#sentiment-analysis-1",
    "title": "Data Science for Industry Assignment 2",
    "section": "Sentiment analysis",
    "text": "Sentiment analysis\nPositive and negative words used in the speeches\nThe data is tokenize to individual words and stop words are removed. We look at the most used positive and negative in all the speeches.\n\n\n\n\n\nFigure 1: Top 15 mostly common used positive and negative words by all presidents.\n\n\n\n\nFigure 1 show the top 15 commonly used words by the president in their speeches, both negative and positive. The most commonly used positive words in the speeches are regard, improve and support. This is quite surprising, one would expect the words such freedom and empowerments to be in the top 3 given that a random person would generally expect these words from the president of a country.\nLooking at negative words, crime and poverty top the list , with corruption ranked fourth. For a person invested in the state of South Africa especially politics, it will be no surprise that these words are ranked in the top in the lost of most used negative.\nHaving looked at all the speeches without grouping by presidents, of interest will be positive and negative words used by each president in their speeches.\n\n\n\n\n\n\n\n\nFigure 2: Top 5 mostly common used positive words by each president.\n\n\n\n\nIn Figure 2 , we can see that the word regard appears in to be most used positive word by the president. With 3 of the president using this words, Mandela , Mbeki and Motlanthe. This is expected as this was the most used word when look at all the speeches. The most popular word across all the presidents is freedom with the exception of Ramaphosa. We also note that deKlerk’s counts are very low compared to the other presidents. The reason for this is that deKlerk only made one speech which was shorter in terms of the number of sentence compared to the other 5 presidents. Motlanthe also made one speech , but in terms length, it was in the range of other presidents who had longer speeches. If we were summarize the theme of all these words,based on these plots, it’s freedom, improvement and progress.\n\n\n\n\n\nFigure 3: Top 5 mostly common used negative words by each president.\n\n\n\n\nFigure 3 displays the top 5 most used negative words by the presidents. Crime, Issues and Poverty dominates. An interesting observation, is that none of these words are popular in deKlerk’s speech. This is where things can be misleading and we have to be very careful at how we view these results. This certainly does not mean crime and poverty were not present during those times and also does not mean they were. if this graphic were to be given to someones with no context, a lot of misinterpretation would occur. Our interest is looking at the positive and negative words used by the presidents in their speeches and how these vary from one president to another\nSentiment over time\nThis part look at how the sentiment of the words in these speeches change over time. This is done based on year, which is from 1994 to 2023 by determining the frequency of positive and negative words. The overall sentiment over the years is indicated in Figure 4 . Based on this plot, the proportion of positive sentiment is exceeds the proportion of negative sentiment given that the plot indicating the positive sentiment is always above the the one showing negative sentiment. The smooth lines can be thought of showing the predicted distribution in the long-run. Around 2014 , we notice a drop in both sentiments and starts to gradual pick-up again.\n\n\n\n\n\nFigure 4: Sentiment of the words used in the speeches from 1994 to 2023\n\n\n\n\nFor the individual presidents, we will look at Jacob Zuma and Thabo Mbeki. The proportion of positive and negative sentiments in their speeches is shown in Figure 5 . For Mbeki, we can see that the proportion of words with positive sentiment exceeds the of words with negative sentiments. On the other hand, we notice that in Zuma’s case, the curves are quite close to each other with a decreasing curve for the proportion of words with positive sentiment and increasing curve for the proportion of words with negative sentiment starting around 2015. However, this is a small size as a president can only serve for a certain period of time.\n\n\nList of 2\n $ axis.text.x:List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : num 10\n  ..$ hjust        : num 1\n  ..$ vjust        : NULL\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi FALSE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y:List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : num 10\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi FALSE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi FALSE\n - attr(*, \"validate\")= logi TRUE\n\n\n\n\n\nFigure 5: Sentiment of the Zuma and Mbeki’s words used in their speeches from 1994 to 2023\n\n\n\n\nAggregating sentiment over words\nIn the previous analysis, we only looked at individual words. We use sentence in this case, so the starting point is to tokenize the data by sentences. After tokenizing, we add an index for each of the resulting sentences. To determine the sentiment of a sentence, net sentiment , it is difference between sum positive words and negative words. A negative net sentiment indicated a negative sentence and positive one indicate a positive sentence with 0 indicating neutral. Figure 6 shows the proportion of negative and positive sentiments for sentence over the years.\n\n\n\n\n\n\n\n\nFigure 6: Proportion of positive and negative sentence in the president’ speeches from 1994 to 2023.\n\n\n\n\nThe red line indicate negative sentiment and the green one indicates positive sentiment. The proportion of sentence with positive sentiments was at its peak between 2005 and 2009 afterwards a decrease can be seen. Thabo Mbeki was the president during this period and after this period , Zuma and Motlanthe took over. Although Montlanthe only served for a year.\nWith respect to sentences with negative sentiment, the top graph (red) shows a gradual decrease which means the sentences used by the president were positive. In 2015, we start noticing an increase. Comparing the two, the proportion of positive sentiments fluctuates compared to the negative sentiments."
  },
  {
    "objectID": "assignment2.html#topic-modelling-1",
    "href": "assignment2.html#topic-modelling-1",
    "title": "Data Science for Industry Assignment 2",
    "section": "Topic modelling",
    "text": "Topic modelling\nTo fit LDA we follow the step outlined in the methodology section.\nNothing really interesting as these speeches are drafted way before time hence one is likely to see less negative words.\n\n\n\nWord-topic probabilities\n\n\n\nTo draw out differences between the 3 topics, we look at words that have the greatest difference in beta values between the 3 topics. This is done by taking the log ratio of the two betas of the topics to be compared , the ratio is given by \\log_2 (\\beta_2/\\beta_1) We compare all 3 topics in turns, i.e. 1 vs 2 , 1 vs 3 and 3 vs 2 .\n\n\n\n\n\nFigure 7: Words with greatest difference in \beta between topic 1 and topic 2\n\n\n\n\nThe word that is common is topic 1 is “madame” but this word is used in every speech so this implies the speeches could all be the same topic. Topic 1 is characterized by the word “compatriots” Given that majority of the words have log ratio that relatively small, the topics are likely to be same topic.\n\n\n\n\n\nFigure 8: Words with greatest difference in \beta between topic 2 and topic 3\n\n\n\n\nThe word that is common is topic 2 is “pandemic” and “covid” , this topic was definitely about Covid-19 and was made after the year 2020. All the words in Topic 3 are have a small log ratio meaning topic 2 and topic 3 are similar.\n\n\n\n\n\nFigure 9: Words with greatest difference in \beta between topic 1 and topic 3\n\n\n\n\nComparing Topic 1 and Topic 3: in Topic 1 is characterized by pandemic , covid and capture which further confirms that this topic was about Covid-19. For Topic 1, madame and context are more common. In all the three comparisons made in Figure 7 , Figure 9 and Figure 8 we notice all these topics are not different, this was expected as each document ( speech) come from the president speeches which are all about the government, politics and South Africa.\nDocument-topic probabilities\nThe document-topic probabilities help us to assess whether a particular document is mostly about Topic i. We deduced that Topic 3 and Topic 2 were about Covid 19 based on the plots from the word-topic probabilities. We expect all the speeches after 2020 which were done by Cyril Ramaphosa to be predicted to be about either Topic 3 or Topic 2.\n\n\n\nTopics for all Ramaphosa’s speeches\n\n\nspeech_id\ntopic_1\ntopic_2\ntopic_3\n\n\n\n\n33\n0\n1.0000\n0.0000\n\n\n31\n0\n1.0000\n0.0000\n\n\n30\n0\n1.0000\n0.0000\n\n\n32\n0\n0.3445\n0.6555\n\n\n34\n0\n0.0000\n1.0000\n\n\n35\n0\n0.0000\n1.0000\n\n\n36\n0\n0.0000\n1.0000\n\n\n\n\n\nIndeed, the model predicted these speeches are predicted to be about Topic 2 or 3 as the Table show probabilities of 0 under Topic 1.\nWe explore Zuma’s speeches to see which topic the model predicted them to be. The table below shows that Zuma’s speeches were about Topic 2\n\n\n topic_1  topic_2  topic_3 \n1.206726 5.760434 3.032840 \n\n\n\nTopics for all Zuma’s speeches\n\n\nspeech_id\ntopic_1\ntopic_2\ntopic_3\n\n\n\n\n23\n0.0000\n1.0000\n0.0000\n\n\n22\n0.0000\n1.0000\n0.0000\n\n\n24\n0.0107\n0.9785\n0.0108\n\n\n28\n0.0000\n0.9008\n0.0992\n\n\n26\n0.0000\n0.8797\n0.1203\n\n\n21\n0.5375\n0.3770\n0.0856\n\n\n19\n0.6584\n0.3001\n0.0415\n\n\n29\n0.0000\n0.2157\n0.7843\n\n\n25\n0.0000\n0.1086\n0.8914\n\n\n27\n0.0000\n0.0000\n1.0000"
  }
]